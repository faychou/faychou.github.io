<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>vue 移动端适配及打包为 APP</title>
    <url>/%E7%A7%BB%E5%8A%A8%E7%AB%AF/vuemobileandapp/</url>
    <content><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>在 小程序、RN、Flutter 大行其道的环境下，为什么今天还要给大家聊聊网页版的移动布局，只能说各有各的需求。</p>
<p>我们都知道，移动端 web 网页布局最大的挑战就是适配各种手机，不止是因为手机尺寸不一，更因为手机设备有一个叫 dpr 的参数，提高了手机分辨率的情况下，也对程序的开发提出了更高的要求。</p>
<p>目前主流的 UI 设计方案是针对 iphone6 的手机尺寸（375 * 667 像素），但是设计图大小会设计为 750 * 1334 像素，因为 dpr 为 2，不清楚的童鞋可以参考这篇文章 <a href=""></a>，里面讲的很详细。这就要求前端的同学根据 UI 的设计稿做到开发的程序能够适配不同的手机尺寸大小。由于目前的 vw 的兼容性还有待提升，于是就有了迂回的政策–使用 rem 单位，该单位是相对于根标签的字体大小的，只要根标签的字体大小发生改变，rem 的大小也会跟着一起改变，从而实现自适应不同的设备。具体实施方案，请看以下步骤（基于 vue/cli3 搭建的环境）：</p>
<p>第一步、安装相关依赖模块；</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i amfe-flexible --save // 适配方案，会自动根据设备去修改根标签字体大小</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm i postcss-pxtorem --save-dev     // 把 px 转换成对应的 rem</span></pre></td></tr></table></figure>

<p>在项目根目录下找到 public 下的 index.html 文件，在 head 中相应位置添加以下代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1"</span>&gt;</span></span></pre></td></tr></table></figure>

<p>第二步、在 main.js 中引入 适配文件：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'amfe-flexible'</span></span></pre></td></tr></table></figure>

<p>&lt;!-– more –-&gt;</p>
<p>第三步、在项目根目录下创建 vue.config.js 配置文件:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> autoprefixer = <span class="built_in">require</span>(<span class="string">'autoprefixer'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> pxtorem = <span class="built_in">require</span>(<span class="string">'postcss-pxtorem'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    css: &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        loaderOptions: &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">          css: &#123;&#125;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">          postcss: &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            plugins: [</span></pre></td></tr><tr><td class="code"><pre><span class="line">              autoprefixer(),</span></pre></td></tr><tr><td class="code"><pre><span class="line">              pxtorem(&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                rootValue: <span class="number">75</span>, <span class="comment">// 基准值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                propList: [<span class="string">'*'</span>] <span class="comment">// 决定哪些属性值自动转换，如：propList: ['font', 'font-size', 'line-height', 'letter-spacing'],</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">              &#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            ]</span></pre></td></tr><tr><td class="code"><pre><span class="line">          &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>上方的 rootValue 是基准值，假如设计图给的宽度是 750，通常就会把 rootValue 设置为75，这样写样式时，可以直接按照设计图标注的宽高来 1:1 还原，如：设计图上图片大小为 300 像素，那我们在代码里也直接写 300px 。</p>
<p>完成配置修改后，重启服务器即可。</p>
<h1 id="打包为-APP"><a href="#打包为-APP" class="headerlink" title="打包为 APP"></a>打包为 APP</h1>]]></content>
      <categories>
        <category>移动端</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>app</tag>
        <tag>布局</tag>
      </tags>
  </entry>
  <entry>
    <title>新博客的搭建</title>
    <url>/web/newblogbuildingsummary/</url>
    <content><![CDATA[<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown 解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h3 id="hexo-安装"><a href="#hexo-安装" class="headerlink" title="hexo 安装"></a>hexo 安装</h3><p>首先确保电脑已经安装了 nodejs 和 git，如果没有安装请先安装后再执行以下操作。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g <span class="comment"># 脚手架</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo init myBlog <span class="comment"># 创建项目</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> myBlog <span class="comment"># 进入目录</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">npm install <span class="comment"># 安装依赖</span></span></pre></td></tr></table></figure>

<h3 id="基本结构"><a href="#基本结构" class="headerlink" title="基本结构"></a>基本结构</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">├── _config.yml  <span class="comment"># 网站的配置文件</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">├── package.json <span class="comment"># 应用程序的信息</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">├── scaffolds <span class="comment"># 一些通用的 markdown 模板</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">├── <span class="built_in">source</span> <span class="comment"># 存放用户资源的地方</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">|   ├── _drafts <span class="comment"># 草稿文件</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">|   └── _posts <span class="comment"># 发布的文章</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">└── themes <span class="comment"># 博客的模板</span></span></pre></td></tr></table></figure>

<h3 id="使用主题"><a href="#使用主题" class="headerlink" title="使用主题"></a>使用主题</h3><p>第一步、下载模板：</p>
<p>第二步、将下载的模板解压到 themes 目录：</p>
<p>第三步、修改根目录下的 <code>_config.yml</code> 文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">模板名字</span></span></pre></td></tr></table></figure>

<h3 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h3><p>在终端运行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span></pre></td></tr></table></figure>

<p>这样在根目录下的 <code>source/_posts</code> 目录下就会生成一个 <code>.md</code>  的文件了，然后就可以直接进行编辑。</p>
<p>_或者直接在 <code>_posts</code> 目录下新建 markdown 文件编辑，在 <code>_drafts</code> 目录新建 markdown 文件，就是草稿。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">layout:</span> <span class="string">post或者get</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">文章的标题，默认</span> <span class="string">filename</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">date:</span> <span class="string">文件的创建日期，如：2018-08-31</span> <span class="number">17</span><span class="string">:54:54</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">updated:</span> <span class="string">文件的修改日期</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">comments:</span> <span class="string">是否开启评论,</span> <span class="literal">true</span> <span class="string">或者</span> <span class="literal">false</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">tags:</span> <span class="string">文章的标签，如：</span>	<span class="string">[tag1,</span> <span class="string">tag2,</span> <span class="string">tag3]</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span> <span class="string">文章分类，如：</span>	<span class="string">[Android,</span> <span class="string">动画]</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">url</span> <span class="string">中的名字</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span></pre></td></tr></table></figure>

<p>有时候我们需要截取一部分文章作为首页的摘要显示,可以在文章中添加分隔符号:</p>
<p>&lt;!-– more –-&gt;</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">!-–</span> <span class="attr">more</span> –<span class="attr">-</span>&gt;</span></span></span></pre></td></tr></table></figure>

<p>发表草稿：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo publish [layout] &lt;filename&gt;</span></pre></td></tr></table></figure>

<h3 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成静态文件并监视文件变动</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo generate -w</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 或者 启动服务器。默认情况下，访问网址为： http://localhost:4000/。</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo server</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 调试模式</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo s --debug</span></pre></td></tr></table></figure>

<h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><p>先安装git插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span></pre></td></tr></table></figure>

<p>配置 git ，修改根目录下的 <code>_config.yml</code> 文件:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"> <span class="attr">type:</span> <span class="string">git</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/faychou/faychou.github.io.git</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span></pre></td></tr></table></figure>

<p>推送到 github ：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 清除缓存文件 (db.json) 和已生成的静态文件 (public)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo clean</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 生成静态文件</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo generate <span class="comment"># 简写为 hexo g</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 然后部署网站</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo deploy <span class="comment"># 简写为：hexo d</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 或者以上两步直接替换为</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo generate -d</span></pre></td></tr></table></figure>

<h2 id="next-主题改造"><a href="#next-主题改造" class="headerlink" title="next 主题改造"></a>next 主题改造</h2><h3 id="在右上角或者左上角实现-fork-me-on-github"><a href="#在右上角或者左上角实现-fork-me-on-github" class="headerlink" title="在右上角或者左上角实现 fork me on github"></a>在右上角或者左上角实现 fork me on github</h3><p>第一步、<a href="https://github.blog/2008-12-19-github-ribbons/" target="_blank" rel="noopener">点击这里</a> 或者 <a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">这里</a> 选择喜欢的样式并复制好代码；</p>
<p>第二步、打开博客根目录下的 <code>themes/next/layout/_layout.swig</code> 文件， 在 <code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code> 标签的后面加上第一步复制的代码，并把 href 改为你的 github 地址：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"headband"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这里插入复制的代码 --&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://faychou.github.com"</span> <span class="attr">class</span>=<span class="string">"github-corner"</span> <span class="attr">aria-label</span>=<span class="string">"View source on GitHub"</span>&gt;</span><span class="tag">&lt;<span class="name">svg</span> <span class="attr">width</span>=<span class="string">"80"</span> <span class="attr">height</span>=<span class="string">"80"</span> <span class="attr">viewBox</span>=<span class="string">"0 0 250 250"</span> <span class="attr">style</span>=<span class="string">"fill:#64CEAA; color:#fff; position: absolute; top: 0; border: 0; right: 0;"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2"</span> <span class="attr">fill</span>=<span class="string">"currentColor"</span> <span class="attr">style</span>=<span class="string">"transform-origin: 130px 106px;"</span> <span class="attr">class</span>=<span class="string">"octo-arm"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z"</span> <span class="attr">fill</span>=<span class="string">"currentColor"</span> <span class="attr">class</span>=<span class="string">"octo-body"</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span><span class="tag">&lt;/<span class="name">svg</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"><span class="selector-class">.github-corner</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.octo-arm</span>&#123;<span class="attribute">animation</span>:octocat-wave <span class="number">560ms</span> ease-in-out&#125;@<span class="keyword">keyframes</span> octocat-wave&#123;0%,100%&#123;<span class="attribute">transform</span>:<span class="built_in">rotate</span>(0)&#125;20%,60%&#123;<span class="attribute">transform</span>:<span class="built_in">rotate</span>(-25deg)&#125;40%,80%&#123;<span class="attribute">transform</span>:<span class="built_in">rotate</span>(10deg)&#125;&#125;@<span class="keyword">media</span> (max-width:<span class="number">500px</span>)&#123;<span class="selector-class">.github-corner</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.octo-arm</span>&#123;<span class="attribute">animation</span>:none&#125;<span class="selector-class">.github-corner</span> <span class="selector-class">.octo-arm</span>&#123;<span class="attribute">animation</span>:octocat-wave <span class="number">560ms</span> ease-in-out&#125;&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 结束 --&gt;</span></span></pre></td></tr></table></figure>

<h3 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h3><p>第一步、在终端（cmd）中进入博客的根目录，并安装以下模块：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-generator-feed</span></pre></td></tr></table></figure>

<p>第二步、然后用编辑器打开根目录下的 <code>_config.yml</code> 文件，在文件的末尾添加以下内容：(请注意在冒号后面要加一个空格，不然会发生错误！)</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">plugins:</span> <span class="string">hexo-generate-feed</span></span></pre></td></tr></table></figure>

<p>第三步、打开 <code>themes\next\_config.yml</code> 文件，为 <code>rss</code> 配置以下内容：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span></pre></td></tr></table></figure>

<h3 id="修改文章内链接文本样式"><a href="#修改文章内链接文本样式" class="headerlink" title="修改文章内链接文本样式"></a>修改文章内链接文本样式</h3><p>修改 <code>themes\next\source\css\_common\components\post\post.styl</code> 文件，在末尾添加 css 代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// 文章内链接文本样式</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  //... 根据情况添加 css</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    //...</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h3 id="修改文章底部的那个带-号的标签"><a href="#修改文章底部的那个带-号的标签" class="headerlink" title="修改文章底部的那个带 # 号的标签"></a>修改文章底部的那个带 # 号的标签</h3><p>修改 <code>/themes/next/layout/_macro/post.swig</code> 文件，搜索 <code>rel=&quot;tag&quot;&gt;#</code> ，将 # 换成 <code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code> 或其他标签。</p>
<h3 id="在每篇文章末尾统一添加“本文结束”标记"><a href="#在每篇文章末尾统一添加“本文结束”标记" class="headerlink" title="在每篇文章末尾统一添加“本文结束”标记"></a>在每篇文章末尾统一添加“本文结束”标记</h3><p>在路径 <code>\themes\next\layout\_macro</code> 中新建 <code>passage-end-tag.swig</code> 文件,并添加以下内容：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;% if not is_index %&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &lt;div style&#x3D;&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class&#x3D;&quot;fa fa-paw&quot;&gt;&lt;&#x2F;i&gt;感谢您的阅读-------------&lt;&#x2F;div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;% endif %&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;&#x2F;div&gt;</span></pre></td></tr></table></figure>

<p>接着打开 <code>\themes\next\layout\_macro\post.swig</code> 文件，在 post-body 之后， post-footer 之前添加如下部分代码（post-footer 之前两个 DIV）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#123;% if not is_index %&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;% include &#39;passage-end-tag.swig&#39; %&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#123;% endif %&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&lt;&#x2F;div&gt;</span></pre></td></tr></table></figure>

<p>然后打开主题配置文件（_config.yml),在末尾添加：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">passage_end_tag:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span></pre></td></tr></table></figure>

<h3 id="修改作者头像样式"><a href="#修改作者头像样式" class="headerlink" title="修改作者头像样式"></a>修改作者头像样式</h3><p>打开 <code>\themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code>，在里面添加如下代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  // 设置样式</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>

<h3 id="代码压缩"><a href="#代码压缩" class="headerlink" title="代码压缩"></a>代码压缩</h3><p>在站点的根目录下执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install gulp -g</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save</span></pre></td></tr></table></figure>

<p>根目录下新建 <code>gulpfile.js</code> 文件，加入以下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">'gulp-minify-css'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlmin = <span class="built_in">require</span>(<span class="string">'gulp-htmlmin'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlclean = <span class="built_in">require</span>(<span class="string">'gulp-htmlclean'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 压缩 public 目录 css</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">gulp.task(<span class="string">'minify-css'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.css'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        .pipe(minifycss())</span></pre></td></tr><tr><td class="code"><pre><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 压缩 public 目录 html</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">gulp.task(<span class="string">'minify-html'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.html'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    .pipe(htmlclean())</span></pre></td></tr><tr><td class="code"><pre><span class="line">    .pipe(htmlmin(&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">         removeComments: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">         minifyJS: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">         minifyCSS: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">         minifyURLs: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;))</span></pre></td></tr><tr><td class="code"><pre><span class="line">    .pipe(gulp.dest(<span class="string">'./public'</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 压缩 public/js 目录 js</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">gulp.task(<span class="string">'minify-js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'./public/**/*.js'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        .pipe(uglify())</span></pre></td></tr><tr><td class="code"><pre><span class="line">        .pipe(gulp.dest(<span class="string">'./public'</span>));</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 执行 gulp 命令时执行的任务</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">gulp.task(<span class="string">'default'</span>, [</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">'minify-html'</span>,<span class="string">'minify-css'</span>,<span class="string">'minify-js'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">]);</span></pre></td></tr></table></figure>

<p>然后在终端中依次执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 然后运行</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">gulp</span></pre></td></tr></table></figure>

<p>最后 dest 目录里就是压缩之后的代码。</p>
<h3 id="添加热度"><a href="#添加热度" class="headerlink" title="添加热度"></a>添加热度</h3><p>next 主题集成 leanCloud，打开<code>/themes/next/layout/_macro/post.swig</code> 在最后一个 span 添加 <code>℃</code>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&#123;#</span> <span class="string">LeanClould</span> <span class="string">PageView</span> <span class="comment">#&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#123;%</span> <span class="string">if</span> <span class="string">theme.leancloud_visitors.enable</span> <span class="string">%&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">//</span> <span class="string">...</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">&lt;span&gt;℃&lt;/span&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">&lt;/span&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span></pre></td></tr></table></figure>

<p>然后打开，<code>/themes/next/languages/zh-Hans.yml</code>,将 visitors 改为热度：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post:</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">visitors:</span> <span class="string">热度</span></span></pre></td></tr></table></figure>

<h3 id="网站底部字数统计"><a href="#网站底部字数统计" class="headerlink" title="网站底部字数统计"></a>网站底部字数统计</h3><p>切换到根目录下，然后运行如下代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span></pre></td></tr></table></figure>

<p>然后在<code>/themes/next/layout/_partials/footer.swig</code>文件尾部加上：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;div</span> <span class="string">class="theme-info"&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">&lt;div</span> <span class="string">class="powered-by"&gt;&lt;/div&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">&lt;span</span> <span class="string">class="post-count"&gt;博客全站共&#123;&#123;</span> <span class="string">totalcount(site)</span> <span class="string">&#125;&#125;字&lt;/span&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;/div&gt;</span></span></pre></td></tr></table></figure>

<h3 id="实现文章字数统计及阅读时长估算"><a href="#实现文章字数统计及阅读时长估算" class="headerlink" title="实现文章字数统计及阅读时长估算"></a>实现文章字数统计及阅读时长估算</h3><p>在根目录下安装 <code>hexo-wordcount</code>,运行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span></pre></td></tr></table></figure>

<p>然后在主题的配置文件中，配置如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Post wordcount display settings</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">post_wordcount:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">item_text:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">wordcount:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span></pre></td></tr></table></figure>

<h3 id="设置网站的图标Favicon"><a href="#设置网站的图标Favicon" class="headerlink" title="设置网站的图标Favicon"></a>设置网站的图标Favicon</h3><p>将自己制作的 <code>favicon.ico</code> 图标放在 <code>/themes/next/source/images</code> 里，并且修改主题配置文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Put your favicon.ico into `hexo-site/source/` directory.</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">favicon:</span> <span class="string">/favicon.ico</span></span></pre></td></tr></table></figure>

<h3 id="在文章底部增加版权信息"><a href="#在文章底部增加版权信息" class="headerlink" title="在文章底部增加版权信息"></a>在文章底部增加版权信息</h3><p>在目录 <code>next/layout/_macro/下</code>添加 <code>my-copyright.swig</code>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&#123;%</span> <span class="string">if</span> <span class="string">page.copyright</span> <span class="string">%&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;div</span> <span class="string">class="my_post_copyright"&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">&lt;script</span> <span class="string">src="//cdn.bootcss.com/clipboard.js/1.5.10/clipboard.min.js"&gt;&lt;/script&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  </span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">&lt;!--</span> <span class="string">JS库</span> <span class="string">sweetalert</span> <span class="string">可修改路径</span> <span class="string">--&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">&lt;script</span> <span class="string">src="https://cdn.bootcss.com/jquery/2.0.0/jquery.min.js"&gt;&lt;/script&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">&lt;script</span> <span class="string">src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"&gt;&lt;/script&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">&lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a</span> <span class="string">href="&#123;&#123;</span> <span class="string">url_for(page.path)</span> <span class="string">&#125;&#125;"&gt;&#123;&#123;</span> <span class="string">page.title</span> <span class="string">&#125;&#125;&lt;/a&gt;&lt;/p&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">&lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a</span> <span class="string">href="/"</span> <span class="string">title="访问</span> <span class="string">&#123;&#123;</span> <span class="string">theme.author</span> <span class="string">&#125;&#125;</span> <span class="string">的个人博客"&gt;&#123;&#123;</span> <span class="string">theme.author</span> <span class="string">&#125;&#125;&lt;/a&gt;&lt;/p&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">&lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123;</span> <span class="string">page.date.format("YYYY年MM月DD日</span> <span class="bullet">-</span> <span class="string">HH:mm")</span> <span class="string">&#125;&#125;&lt;/p&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">&lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123;</span> <span class="string">page.updated.format("YYYY年MM月DD日</span> <span class="bullet">-</span> <span class="string">HH:mm")</span> <span class="string">&#125;&#125;&lt;/p&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">&lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a</span> <span class="string">href="&#123;&#123;</span> <span class="string">url_for(page.path)</span> <span class="string">&#125;&#125;"</span> <span class="string">title="&#123;&#123;</span> <span class="string">page.title</span> <span class="string">&#125;&#125;"&gt;&#123;&#123;</span> <span class="string">page.permalink</span> <span class="string">&#125;&#125;&lt;/a&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">&lt;span</span> <span class="string">class="copy-path"</span>  <span class="string">title="点击复制文章链接"&gt;&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-clipboard"</span> <span class="string">data-clipboard-text="&#123;&#123;</span> <span class="string">page.permalink</span> <span class="string">&#125;&#125;"</span>  <span class="string">aria-label="复制成功！"&gt;&lt;/i&gt;&lt;/span&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">&lt;/p&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">&lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i</span> <span class="string">class="fa</span> <span class="string">fa-creative-commons"&gt;&lt;/i&gt;</span> <span class="string">&lt;a</span> <span class="string">rel="license"</span> <span class="string">href="https://creativecommons.org/licenses/by-nc-nd/4.0/"</span> <span class="string">target="_blank"</span> <span class="string">title="Attribution-NonCommercial-NoDerivatives</span> <span class="number">4.0</span> <span class="string">International</span> <span class="string">(CC</span> <span class="string">BY-NC-ND</span> <span class="number">4.0</span><span class="string">)"&gt;署名-非商业性使用-禁止演绎</span> <span class="number">4.0</span> <span class="string">国际&lt;/a&gt;</span> <span class="string">转载请保留原文链接及作者。&lt;/p&gt;</span>  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;script&gt;</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">var</span> <span class="string">clipboard</span> <span class="string">=</span> <span class="string">new</span> <span class="string">Clipboard('.fa-clipboard');</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">$(".fa-clipboard").click(function()&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="string">clipboard.on('success',</span> <span class="string">function()&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">swal(&#123;</span>   </span></pre></td></tr><tr><td class="code"><pre><span class="line">          <span class="attr">title:</span> <span class="string">""</span><span class="string">,</span>   </span></pre></td></tr><tr><td class="code"><pre><span class="line">          <span class="attr">text:</span> <span class="string">'复制成功'</span><span class="string">,</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">          <span class="attr">icon:</span> <span class="string">"success"</span><span class="string">,</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line">          <span class="attr">showConfirmButton:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">          <span class="string">&#125;);</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="string">&#125;);</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">&#125;);</span>  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;/script&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span></pre></td></tr></table></figure>

<p>在目录<code>next/source/css/_common/components/post/</code>下添加<code>my-post-copyright.styl</code>：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">.my_post_copyright</span> <span class="string">&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">width:</span> <span class="number">85</span><span class="string">%;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">max-width:</span> <span class="string">45em;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">margin:</span> <span class="number">2.</span><span class="string">8em</span> <span class="string">auto</span> <span class="number">0</span><span class="string">;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">padding:</span> <span class="number">0.</span><span class="string">5em</span> <span class="number">1.</span><span class="string">0em;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">border:</span> <span class="string">1px</span> <span class="string">solid</span> <span class="comment">#d3d3d3;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">font-size:</span> <span class="number">0.</span><span class="string">93rem;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">line-height:</span> <span class="number">1.</span><span class="string">6em;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">word-break:</span> <span class="string">break-all;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">background:</span> <span class="string">rgba(255,255,255,0.4);</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">.my_post_copyright</span> <span class="string">p&#123;margin:0;&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">.my_post_copyright</span> <span class="string">span</span> <span class="string">&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">display:</span> <span class="string">inline-block;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">width:</span> <span class="number">5.</span><span class="string">2em;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">color:</span> <span class="comment">#b5b5b5;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">font-weight:</span> <span class="string">bold;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">.my_post_copyright</span> <span class="string">.raw</span> <span class="string">&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">margin-left:</span> <span class="string">1em;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">width:</span> <span class="string">5em;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">.my_post_copyright</span> <span class="string">a</span> <span class="string">&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">color:</span> <span class="comment">#808080;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">border-bottom:0;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">.my_post_copyright</span> <span class="string">a:hover</span> <span class="string">&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">color:</span> <span class="comment">#a3d2a3;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">text-decoration:</span> <span class="string">underline;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">.my_post_copyright:hover</span> <span class="string">.fa-clipboard</span> <span class="string">&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">color:</span> <span class="comment">#000;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">.my_post_copyright</span> <span class="string">.post-url:hover</span> <span class="string">&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">font-weight:</span> <span class="string">normal;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">.my_post_copyright</span> <span class="string">.copy-path</span> <span class="string">&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">margin-left:</span> <span class="string">1em;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">width:</span> <span class="string">1em;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">+mobile()&#123;display:none;&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">.my_post_copyright</span> <span class="string">.copy-path:hover</span> <span class="string">&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">color:</span> <span class="comment">#808080;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">cursor:</span> <span class="string">pointer;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr></table></figure>

<p>修改<code>next/layout/_macro/post.swig</code>，在代码：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;div&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="string">&#123;%</span> <span class="string">if</span> <span class="string">not</span> <span class="string">is_index</span> <span class="string">%&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">&#123;%</span> <span class="string">include</span> <span class="string">'my-copyright.swig'</span> <span class="string">%&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;!--</span> <span class="string">在这之前添加代码</span> <span class="string">--&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;div&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="string">&#123;%</span> <span class="string">if</span> <span class="string">not</span> <span class="string">is_index</span> <span class="string">%&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="string">&#123;%</span> <span class="string">include</span> <span class="string">'wechat-subscriber.swig'</span> <span class="string">%&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;/div&gt;</span></span></pre></td></tr></table></figure>

<p>修改<code>next/source/css/_common/components/post/post.styl</code>文件，在最后一行增加代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">@<span class="keyword">import</span> <span class="string">"my-post-copyright"</span></span></pre></td></tr></table></figure>

<p>然后在 <code>/scaffolds/post.md</code> 文件中添加：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span></pre></td></tr><tr><td class="code"><pre><span class="line">copyright: </span></pre></td></tr><tr><td class="code"><pre><span class="line">---</span></pre></td></tr></table></figure>

<p><strong>注意</strong>：如果解析出来之后，你的原始链接有问题：如：<code>http://yoursite.com/前端小项目：使用canvas绘画哆啦A梦.html</code>,那么在根目录下<code>_config.yml</code>中写成类似这样：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># URL</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://www.faychou.cn</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">root:</span> <span class="string">/</span></span></pre></td></tr></table></figure>

<h3 id="隐藏网页底部powered-By-Hexo-强力驱动"><a href="#隐藏网页底部powered-By-Hexo-强力驱动" class="headerlink" title="隐藏网页底部powered By Hexo / 强力驱动"></a>隐藏网页底部powered By Hexo / 强力驱动</h3><p>打开<code>themes/next/layout/_partials/footer.swig</code>,直接删除以下代码：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;div</span> <span class="string">class="powered-by"&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">...</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;/div&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;div</span> <span class="string">class="theme-info"&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;/div&gt;</span></span></pre></td></tr></table></figure>

<h3 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h3><p>修改 <code>hero-generator-index</code> 插件，把文件：<code>node_modules/hexo-generator-index/lib/generator.js</code> 内的代码替换为：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">var</span> posts = locals.posts;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">var</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    perPage: config.index_generator.per_page,</span></pre></td></tr><tr><td class="code"><pre><span class="line">    layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span></pre></td></tr><tr><td class="code"><pre><span class="line">    format: paginationDir + <span class="string">'/%d/'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">    data: &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      __index: <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure>

<p>在文章中添加 <code>top</code> 值，数值越大文章越靠前，如:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span></pre></td></tr><tr><td class="code"><pre><span class="line">title: 解决Charles乱码问题</span></pre></td></tr><tr><td class="code"><pre><span class="line">date: 2017-05-22 22:45:48</span></pre></td></tr><tr><td class="code"><pre><span class="line">tags: 技巧</span></pre></td></tr><tr><td class="code"><pre><span class="line">categories: 技巧</span></pre></td></tr><tr><td class="code"><pre><span class="line">copyright: true</span></pre></td></tr><tr><td class="code"><pre><span class="line">top: 100</span></pre></td></tr><tr><td class="code"><pre><span class="line">---</span></pre></td></tr></table></figure>

<h3 id="侧边栏推荐阅读"><a href="#侧边栏推荐阅读" class="headerlink" title="侧边栏推荐阅读"></a>侧边栏推荐阅读</h3><p>打开主题配置文件修改成这样就行了(links里面写你想要的链接):</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Blogrolls</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">links_title:</span> <span class="string">推荐阅读</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#links_layout: block</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">links_layout:</span> <span class="string">inline</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="attr">links:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">花瓣:</span> <span class="string">https://huaban.com/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">Web前端导航:</span> <span class="string">http://www.alloyteam.com/nav/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">思否:</span> <span class="string">https://segmentfault.com/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">stack overflow:</span> <span class="string">http://stackoverflow.com/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="string">掘金:</span> <span class="string">https://juejin.im/</span></span></pre></td></tr></table></figure>

<h3 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h3><p>安装hexo-generator-searchdb，在站点的根目录下执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span></pre></td></tr></table></figure>

<p>再网站配置文件 config 增加：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span></pre></td></tr></table></figure>

<p>修改主题配置文件config：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>建站</tag>
      </tags>
  </entry>
  <entry>
    <title>编写文章</title>
    <url>/html/%E7%BC%96%E5%86%99%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span></pre></td></tr></table></figure>

<p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"post title with whitespace"</span></span></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-p</code>, <code>--path</code></td>
<td align="left">自定义新文章的路径</td>
</tr>
<tr>
<td align="left"><code>-r</code>, <code>--replace</code></td>
<td align="left">如果存在同名文章，将其替换</td>
</tr>
<tr>
<td align="left"><code>-s</code>, <code>--slug</code></td>
<td align="left">文章的 Slug，作为新文章的文件名和发布后的 URL</td>
</tr>
</tbody></table>
<p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件。你可以使用 <code>--path</code> 参数来覆盖上述行为、自行决定文件的目录：</p>
]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/uncategorized/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>10道经典面试题</title>
    <url>/JavaScript/10-jingdianmianshiti/</url>
    <content><![CDATA[<h3 id="第一题、以下输出结果是什么？"><a href="#第一题、以下输出结果是什么？" class="headerlink" title="第一题、以下输出结果是什么？"></a>第一题、以下输出结果是什么？</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'window name'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> name === <span class="string">'undefined'</span>) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">var</span> name = <span class="string">'Fay Chou'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(name);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Hello'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;)(); <span class="comment">// Fay Chou</span></span></pre></td></tr></table></figure>

<p>解析：这道题主要考察的还是变量提升，通过关键字 <code>var</code> 声明的变量，会被提升至当前作用域的顶部，也就是第4行代码 name 的声明会升至当前函数的顶部，但是赋值的位置不变。</p>
<h3 id="第二题、思考以下代码会在控制台打印出什么？"><a href="#第二题、思考以下代码会在控制台打印出什么？" class="headerlink" title="第二题、思考以下代码会在控制台打印出什么？"></a>第二题、思考以下代码会在控制台打印出什么？</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">var</span> a = b = <span class="number">5</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;)();</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(b); <span class="comment">// 5</span></span></pre></td></tr></table></figure>

<p>&lt;!-– more –-&gt;</p>
<p>解析：在函数的内部，有两个变量，其中变量 a 的前面加了关键字 <code>var</code> 进行声明，说明该变量是局部变量，但是变量 b 是没有加关键字的，即是全局变量，所以第二行代码实际上等价于 <code>var a = window.b = 5</code>。</p>
<h3 id="第三题、以下代码的结果是什么？"><a href="#第三题、以下代码的结果是什么？" class="headerlink" title="第三题、以下代码的结果是什么？"></a>第三题、以下代码的结果是什么？</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">'window name'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  name: <span class="string">'Chou'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">  child: &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    name: <span class="string">'Fay Chou'</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">    getName: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="keyword">return</span> <span class="keyword">this</span>.name;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(person.child.getName()); <span class="comment">// Fay Chou</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> test = person.child.getName;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(test()); <span class="comment">// window name</span></span></pre></td></tr></table></figure>

<p>解析：要理解 <code>this</code> 的指向，必须看是谁在调用当前函数，直接找距离当前函数最近的对象，在第一个 <code>console.log</code> 中距离 <code>getName()</code> 最近的是 child 这个对象，所以 <code>getName</code>是作为该对象的方法，这里的上下文环境指就指向 child。相反，当 <code>getName</code> 被赋值为全局变量 test 时，此时的上下文环境就切换为 window 对象了。因为 test 是全局对象的一个属性。</p>
<h3 id="第四题、以下代码会输出什么？"><a href="#第四题、以下代码会输出什么？" class="headerlink" title="第四题、以下代码会输出什么？"></a>第四题、以下代码会输出什么？</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> foo = &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  x: <span class="number">1</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">  bar: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.x);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="built_in">console</span>.log(<span class="keyword">this</span>.x);</span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="built_in">console</span>.log(that.x);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">foo.bar(); <span class="comment">// 1 </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">foo.bar()(); <span class="comment">// 分别输出  this: 0 和 that: 1</span></span></pre></td></tr></table></figure>

<p>解析：第一个输出很容易理解，bar 函数由 foo 对象调用，所以里面的 this 指向 foo；再注意观察，bar 函数中返回了一个匿名函数，这个匿名函数可以在外部被调用，也就是 <code>foo.bar()()</code>，所以返回的匿名函数中的 this 就会指向 window，同时匿名函数可以读取到 bar 函数的内部变量 that ，最终形成了一个闭包。</p>
<h3 id="第五题、以下代码依次输出结果"><a href="#第五题、以下代码依次输出结果" class="headerlink" title="第五题、以下代码依次输出结果"></a>第五题、以下代码依次输出结果</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Foo</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  getName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(<span class="string">"1"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Foo.getName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; <span class="comment">// getName 是一个静态方法，只能由 Foo 函数调用</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="built_in">console</span>.log(<span class="string">"2"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">Foo.prototype.getName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="built_in">console</span>.log(<span class="string">"3"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> getName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="built_in">console</span>.log(<span class="string">"4"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getName</span>(<span class="params"></span>)</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="built_in">console</span>.log(<span class="string">"5"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">Foo.getName(); <span class="comment">// 2，解析：直接调用 Foo 函数的静态方法</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">getName(); <span class="comment">// 4</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">Foo().getName(); <span class="comment">// 1，解析：调用 Foo 函数没有加 new，说明直接当普通函数，则内部返回的 this 指向 window，而第2行代码在重新为全局变量 getName 赋值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">getName(); <span class="comment">// 1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Foo.getName(); <span class="comment">//  2，解析：相当于执行函数 Foo.getName</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Foo().getName(); <span class="comment">// 3，解析：相当于(new Foo()).getName()，先执行实例化，然后调用原型上的方法</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="keyword">new</span> Foo().getName(); <span class="comment">// 3，解析：相当于 new (new Foo()).getName()，结果同上</span></span></pre></td></tr></table></figure>

<p>解析：看上方代码注释。</p>
<h3 id="第六题、以下代码执行结果是？"><a href="#第六题、以下代码执行结果是？" class="headerlink" title="第六题、以下代码执行结果是？"></a>第六题、以下代码执行结果是？</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="built_in">console</span>.log(<span class="string">"create a promise"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  resolve(<span class="string">"success"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"after a new Promise"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">p.then(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="built_in">console</span>.log(value);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// "create a promise"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// "after a new Promise"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// "success"</span></span></pre></td></tr></table></figure>

<p>解析：这个还是比较容易理解的，<code>new Promise</code> 其实还是同步执行的，所以最先输出 <code>create a promise</code>，而 <code>then</code>方法中的回调函数则是异步的。</p>
<h3 id="第七题、在来看看以下代码的执行结果？"><a href="#第七题、在来看看以下代码的执行结果？" class="headerlink" title="第七题、在来看看以下代码的执行结果？"></a>第七题、在来看看以下代码的执行结果？</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'1111'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(<span class="string">'4444'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">console</span>.log(<span class="string">'5555'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        resolve();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">console</span>.log(<span class="string">'6666'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(<span class="string">'2222'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    resolve();</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(<span class="string">'3333'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(<span class="string">'7777'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">console</span>.log(<span class="string">'8888'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        resolve();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">console</span>.log(<span class="string">'9999'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// '1111'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// '2222'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// '3333'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// '4444'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// '5555'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// '6666'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// '7777'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// '8888'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// '9999'</span></span></pre></td></tr></table></figure>

<p>解析：要理解这道题，必须要先了解 JS 的 Event Loop，代码的执行分为同步和异步，同步执行完毕后才会执行异步，这个大家应该都了解，但是异步任务实际上还分为微任务（Promise 等）和宏任务（包含 setTimeout、setInterval 等），每次先执行同步任务，然后检查微任务，将可执行的微任务全部执行完毕，然后取宏任务队列中的第一项执行。然后重复执行上面的步骤，即清空微任务，执行一个宏任务，然后检查微任务，再执行一个宏任务。</p>
<h3 id="第八题、最后输出的结果"><a href="#第八题、最后输出的结果" class="headerlink" title="第八题、最后输出的结果"></a>第八题、最后输出的结果</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>; </span></pre></td></tr><tr><td class="code"><pre><span class="line"> <span class="keyword">var</span> obt = &#123; </span></pre></td></tr><tr><td class="code"><pre><span class="line">   a: <span class="number">20</span>, </span></pre></td></tr><tr><td class="code"><pre><span class="line">   fn: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; </span></pre></td></tr><tr><td class="code"><pre><span class="line">     <span class="keyword">var</span> a = <span class="number">30</span>; </span></pre></td></tr><tr><td class="code"><pre><span class="line">     <span class="built_in">console</span>.log(<span class="keyword">this</span>.a)</span></pre></td></tr><tr><td class="code"><pre><span class="line">   &#125; </span></pre></td></tr><tr><td class="code"><pre><span class="line"> &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"> obt.fn();  <span class="comment">// 20</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"> obt.fn.call(); <span class="comment">// 10，解析：call 用来修改函数的 this 指向的，如果没有提供第一个参数，则指向全局对象</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"> (obt.fn)(); <span class="comment">// 20</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"> (obt.fn, obt.fn)(); <span class="comment">// 10，解析：这是 JS 逗号运算符</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"> <span class="keyword">new</span> obt.fn(); <span class="comment">// undefined，解析：把 obt.fn 当作构造函数来使用</span></span></pre></td></tr></table></figure>

<h3 id="第九题、最后的输出结果是多少"><a href="#第九题、最后的输出结果是多少" class="headerlink" title="第九题、最后的输出结果是多少?"></a>第九题、最后的输出结果是多少?</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> length = <span class="number">10</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.length);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  length: <span class="number">5</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">  method: <span class="function"><span class="keyword">function</span>(<span class="params">fn</span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    fn();</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">arguments</span>[<span class="number">0</span>]();</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr><tr><td class="code"><pre><span class="line"> </span></pre></td></tr><tr><td class="code"><pre><span class="line">obj.method(fn, <span class="number">1</span>); <span class="comment">// 10， 2</span></span></pre></td></tr></table></figure>

<p>解析：实际上<code>arguments[0]()</code>这段代码调用了 <code>obj.method</code> 的第一个实参 fn，此时 fn 的作用域就绑定到了 arguments 上，this 也就是指向了 arguments 对象，则 <code>this.length</code> 就等于 <code>arguments.length</code>，又因为 method 传入的参数为2个，所以最后输出2。</p>
<h3 id="第十题、下面代码的输出是什么"><a href="#第十题、下面代码的输出是什么" class="headerlink" title="第十题、下面代码的输出是什么?"></a>第十题、下面代码的输出是什么?</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkAge</span>(<span class="params">data</span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">if</span> (data === &#123; <span class="attr">age</span>: <span class="number">18</span> &#125;) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(<span class="string">"You are an adult!"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125; <span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(<span class="string">`Maybe you are a child`</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">checkAge(&#123; <span class="attr">age</span>: <span class="number">18</span> &#125;); <span class="comment">// Maybe you are a child</span></span></pre></td></tr></table></figure>

<p>解析：解答这道题，我们一定要了解 JS 变量存储的位置，基本数据类型直接将值保存在内存栈中，在比较相等性直接通过它们的值进行比较，而对象是属于引用数据类型，在内存栈中保存的是指针而非值，所以作为参数传递的对象和用于检查相等性的对象在内存中位于不同位置，所以它们的引用是不同的。</p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>面试题</tag>
      </tags>
  </entry>
</search>
